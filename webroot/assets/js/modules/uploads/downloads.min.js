"use strict";function humanFileSize(e){for(var l=["B","KB","MB","GB"],n=l.length;n>=0;n--){var i=Math.pow(2,10*n);if(e>=i)return(e/i).toFixed(2)+" "+l[n]}}var DownloadItem={props:["file"],computed:{humanizedFileSize:function(){return humanFileSize(this.file.size)}},template:'\n        <a :href="file.path" class="mh-download-button column">\n            <div class="card">\n                <div class="card-section">\n                    <p class="mh-download-name"><strong>{{ file.name }}</strong></p>    \n                </div>\n                <div class="card-divider">\n                    <p class="clearfix">\n                        <small class="float-left">{{ humanizedFileSize }}</small>\n                        <small class="float-left">{{ file.type }}</small>   \n                    </p>\n                </div>\n            </div>\n        </a>\n    '},DownloadsCollection={props:["context","alias"],components:{"download-item":DownloadItem},data:function(){return{files:[],baseurl:"/api/downloads"}},methods:{getFiles:function(){this.$http.get(this.baseurl,{params:{context:this.context,alias:this.alias}}).then(function(e){this.files=e.body},function(e){})}},created:function(){this.getFiles()},template:'\n    <div class="small-up-2 large-up-4 row" v-if="files.length">\n        <download-item v-for="file in files" :file="file" :key="file.id"></download-item>     \n    </div>    \n    <div v-else="">No hay elementos para descargar.</div>\n    '},downloads=new Vue({el:"#mh-downloads",components:{"downloads-collection":DownloadsCollection}});